/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import locadoraveiculo.Cliente;
import metodostelas.CarregarTabela;
import metodostelas.GerenciarBotoes;
import metodostelas.GerenciarCampos;

/**
 *
 * @author alexandre
 */
public class CadastroCliente extends javax.swing.JFrame {

    //variavel para indicar editar ou novo quando for salvar
    String botao;
    
    //array de clientes
    static ArrayList<Cliente> listaClientes;
    
    /**
     * Creates new form CadastroCliente
     */
    public CadastroCliente() {
        initComponents();
        
        //Maximizar a tela
        this.setExtendedState(MAXIMIZED_BOTH);
        
        listaClientes = new ArrayList();
        
        //desabilitar campos de texto
        GerenciarCampos.camposDefault(txtNomeCompletoCliente, txtCpfCliente, 
                    txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                    txtCnhCliente, txtDataPrimeiraCnhCliente);
        
        //desabilitar e habilitar botoes
        GerenciarBotoes.iniciarTela(btnNovoCliente, btnSalvarCliente, btnEditarCliente, 
                btnCancelarCliente, btnPesquisarCliente, btnExcluirCliente, btnOkCliente);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalvarCliente = new javax.swing.JButton();
        btnVoltarFromCliente2Menu = new javax.swing.JButton();
        btnNovoCliente = new javax.swing.JButton();
        btnCancelarCliente = new javax.swing.JButton();
        btnEditarCliente = new javax.swing.JButton();
        btnExcluirCliente = new javax.swing.JButton();
        btnPesquisarCliente = new javax.swing.JButton();
        pnlDadosCliente = new javax.swing.JPanel();
        lblNomeCliente = new javax.swing.JLabel();
        lblCpfCliente = new javax.swing.JLabel();
        lblDataNascimentoCliente = new javax.swing.JLabel();
        lblEmailCliente = new javax.swing.JLabel();
        lblTelefoneCliente = new javax.swing.JLabel();
        lblCnhCliente = new javax.swing.JLabel();
        lblDataPrimeiraCnhCliente = new javax.swing.JLabel();
        txtNomeCompletoCliente = new javax.swing.JTextField();
        txtEmailCliente = new javax.swing.JTextField();
        txtCnhCliente = new javax.swing.JTextField();
        txtDataDeNascimentoCliente = new javax.swing.JFormattedTextField();
        txtTelefoneCliente = new javax.swing.JFormattedTextField();
        txtDataPrimeiraCnhCliente = new javax.swing.JFormattedTextField();
        txtCpfCliente = new javax.swing.JTextField();
        btnOkCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClienteLista = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cliente");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/carblue-icon-32.png")).getImage());

        btnSalvarCliente.setText("Salvar");
        btnSalvarCliente.setToolTipText("Salvar dados do cliente");
        btnSalvarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarClienteActionPerformed(evt);
            }
        });

        btnVoltarFromCliente2Menu.setText("Voltar");
        btnVoltarFromCliente2Menu.setToolTipText("Voltar para a janela com a lista de clientes");
        btnVoltarFromCliente2Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarFromCliente2MenuActionPerformed(evt);
            }
        });

        btnNovoCliente.setText("Novo");
        btnNovoCliente.setPreferredSize(new java.awt.Dimension(66, 27));
        btnNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoClienteActionPerformed(evt);
            }
        });

        btnCancelarCliente.setText("Cancelar");
        btnCancelarCliente.setPreferredSize(new java.awt.Dimension(66, 27));
        btnCancelarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarClienteActionPerformed(evt);
            }
        });

        btnEditarCliente.setText("Editar");
        btnEditarCliente.setPreferredSize(new java.awt.Dimension(66, 27));
        btnEditarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarClienteActionPerformed(evt);
            }
        });

        btnExcluirCliente.setText("Excluir");
        btnExcluirCliente.setPreferredSize(new java.awt.Dimension(66, 27));
        btnExcluirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirClienteActionPerformed(evt);
            }
        });

        btnPesquisarCliente.setText("Pesquisar");
        btnPesquisarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarClienteActionPerformed(evt);
            }
        });

        pnlDadosCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Cliente"));

        lblNomeCliente.setText("Nome:");

        lblCpfCliente.setText("CPF:");

        lblDataNascimentoCliente.setText("Data de Nascimento:");

        lblEmailCliente.setText("Email:");

        lblTelefoneCliente.setText("Telefone:");

        lblCnhCliente.setText("CNH:");

        lblDataPrimeiraCnhCliente.setText("Data da Primeira CNH:");

        txtNomeCompletoCliente.setToolTipText("Inserir nome completo do cliente");

        txtEmailCliente.setToolTipText("Inserir o email do cliente");

        txtCnhCliente.setToolTipText("Inserir a CNH do cliente");

        txtDataDeNascimentoCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtDataDeNascimentoCliente.setToolTipText("Inserir a data de nascimento do cliente");

        try {
            txtTelefoneCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefoneCliente.setToolTipText("Inserir telefone do cliente");

        txtDataPrimeiraCnhCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtDataPrimeiraCnhCliente.setToolTipText("Inserir a data da primeira CNH do cliente");

        btnOkCliente.setText("OK");
        btnOkCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDadosClienteLayout = new javax.swing.GroupLayout(pnlDadosCliente);
        pnlDadosCliente.setLayout(pnlDadosClienteLayout);
        pnlDadosClienteLayout.setHorizontalGroup(
            pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDadosClienteLayout.createSequentialGroup()
                        .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmailCliente)
                            .addComponent(lblTelefoneCliente)
                            .addComponent(lblCnhCliente)
                            .addComponent(lblDataPrimeiraCnhCliente))
                        .addGap(20, 20, 20)
                        .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmailCliente)
                            .addComponent(txtTelefoneCliente)
                            .addComponent(txtCnhCliente)
                            .addComponent(txtDataPrimeiraCnhCliente)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosClienteLayout.createSequentialGroup()
                        .addComponent(lblNomeCliente)
                        .addGap(119, 119, 119)
                        .addComponent(txtNomeCompletoCliente))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDadosClienteLayout.createSequentialGroup()
                        .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCpfCliente)
                            .addComponent(lblDataNascimentoCliente))
                        .addGap(27, 27, 27)
                        .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDadosClienteLayout.createSequentialGroup()
                                .addComponent(txtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(btnOkCliente)
                                .addGap(0, 169, Short.MAX_VALUE))
                            .addComponent(txtDataDeNascimentoCliente))))
                .addContainerGap())
        );
        pnlDadosClienteLayout.setVerticalGroup(
            pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNomeCliente)
                    .addComponent(txtNomeCompletoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCpfCliente)
                    .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnOkCliente)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDataNascimentoCliente)
                    .addComponent(txtDataDeNascimentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmailCliente)
                    .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTelefoneCliente)
                    .addComponent(txtTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCnhCliente)
                    .addComponent(txtCnhCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDataPrimeiraCnhCliente)
                    .addComponent(txtDataPrimeiraCnhCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblClienteLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "CPF", "Data de Nascimento", "Email", "Telefone", "CNH", "Data da Primeira CNH"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblClienteLista.getTableHeader().setReorderingAllowed(false);
        tblClienteLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClienteListaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClienteLista);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNovoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvarCliente)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPesquisarCliente)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlDadosCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnVoltarFromCliente2Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDadosCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarCliente)
                    .addComponent(btnNovoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluirCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarCliente))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnVoltarFromCliente2Menu))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarFromCliente2MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarFromCliente2MenuActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnVoltarFromCliente2MenuActionPerformed

    private void btnSalvarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarClienteActionPerformed

        if(txtNomeCompletoCliente.getText().equals("") ||
            txtCpfCliente.getText().equals("") || txtDataDeNascimentoCliente.getText().equals("") ||
            txtEmailCliente.getText().equals("") || txtTelefoneCliente.getText().equals("") ||
            txtCnhCliente.getText().equals("") || txtDataPrimeiraCnhCliente.getText().equals("")) {
            
            JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos", "Messagem", JOptionPane.PLAIN_MESSAGE);
            
            txtNomeCompletoCliente.requestFocus();
            
        } else {
            
            if (botao.equals("novo"))   {
                    
            //cadastrar cliente
            listaClientes.add(Cliente.cadastrarCliente(txtNomeCompletoCliente.getText(),
                txtCpfCliente.getText(), txtDataDeNascimentoCliente.getText(), txtEmailCliente.getText(), 
                txtTelefoneCliente.getText(), txtCnhCliente.getText(), txtDataPrimeiraCnhCliente.getText()));
            
            JOptionPane.showMessageDialog(null, "Cliente cadastrado com sucesso!", "Messagem", JOptionPane.INFORMATION_MESSAGE);
            
            } else if (botao.equals("editar"))  {
                int index = tblClienteLista.getSelectedRow();
                
                //editar cliente
                Cliente.editarCliente(listaClientes.get(index), txtNomeCompletoCliente.getText(),
                    txtCpfCliente.getText(), txtDataDeNascimentoCliente.getText(), txtEmailCliente.getText(), 
                    txtTelefoneCliente.getText(), txtCnhCliente.getText(), txtDataPrimeiraCnhCliente.getText());
                
                JOptionPane.showMessageDialog(null, "Alterações salvas com sucesso!", "Messagem", JOptionPane.INFORMATION_MESSAGE);
                
            }
            
            
            //carregar os dados na tabela de clientes
            CarregarTabela.tabelaClienteLista(tblClienteLista, listaClientes);
            
            //limpar os campos
            GerenciarCampos.limparTodosCampos(txtNomeCompletoCliente, txtCpfCliente, 
                    txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                    txtCnhCliente, txtDataPrimeiraCnhCliente);
            
            txtNomeCompletoCliente.requestFocus();
            
        }
        
    }//GEN-LAST:event_btnSalvarClienteActionPerformed

    private void btnNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoClienteActionPerformed
        
        botao = "novo";
        
        //desabilitar ou habilitar campos de texto
        GerenciarCampos.opcaoNovoEditar(txtNomeCompletoCliente, txtCpfCliente, 
                    txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                    txtCnhCliente, txtDataPrimeiraCnhCliente);
        
        //desabilitar e habilitar botoes
        GerenciarBotoes.botaoNovoEditar(btnNovoCliente, btnSalvarCliente, btnEditarCliente, 
                btnCancelarCliente, btnPesquisarCliente, btnExcluirCliente, btnOkCliente);
        
        //limpar os campos
        GerenciarCampos.limparTodosCampos(txtNomeCompletoCliente, txtCpfCliente, 
                    txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                    txtCnhCliente, txtDataPrimeiraCnhCliente);
        
        txtNomeCompletoCliente.requestFocus();
        
    }//GEN-LAST:event_btnNovoClienteActionPerformed

    private void btnCancelarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarClienteActionPerformed
    
        //desabilitar campos de texto
        GerenciarCampos.camposDefault(txtNomeCompletoCliente, txtCpfCliente, 
                    txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                    txtCnhCliente, txtDataPrimeiraCnhCliente);
        
        //desabilitar ou habilitar campos de texto
        GerenciarCampos.limparTodosCampos(txtNomeCompletoCliente, txtCpfCliente, 
                    txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                    txtCnhCliente, txtDataPrimeiraCnhCliente);
        
        //desabilitar e habilitar botoes
        GerenciarBotoes.botaoCancelar(btnNovoCliente, btnSalvarCliente, btnEditarCliente, 
                btnCancelarCliente, btnPesquisarCliente, btnExcluirCliente, btnOkCliente);
        
    }//GEN-LAST:event_btnCancelarClienteActionPerformed

    private void tblClienteListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClienteListaMouseClicked
        
        int index = tblClienteLista.getSelectedRow();   
        
        if (index >= 0 && index < listaClientes.size()) {
            Cliente cliente = listaClientes.get(index);
            txtNomeCompletoCliente.setText(String.valueOf(cliente.getNomeCompleto()));
            txtCpfCliente.setText(String.valueOf(cliente.getCpf()));
            txtDataDeNascimentoCliente.setText(String.valueOf(cliente.getDataNascimento()));
            txtEmailCliente.setText(String.valueOf(cliente.getEmail()));
            txtTelefoneCliente.setText(String.valueOf(cliente.getTelefone()));
            txtCnhCliente.setText(String.valueOf(cliente.getCnh()));
            txtDataPrimeiraCnhCliente.setText(String.valueOf(cliente.getNomeCompleto()));
        }
        
        //desabilitar e habilitar botoes
        GerenciarBotoes.itemTabela(btnNovoCliente, btnSalvarCliente, btnEditarCliente, 
                btnCancelarCliente, btnPesquisarCliente, btnExcluirCliente, btnOkCliente);
        
        //desabilitar campos de texto
        GerenciarCampos.camposDefault(txtNomeCompletoCliente, txtCpfCliente, 
                    txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                    txtCnhCliente, txtDataPrimeiraCnhCliente);
        
    }//GEN-LAST:event_tblClienteListaMouseClicked

    private void btnEditarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClienteActionPerformed
        
        botao = "editar";
        
        //desabilitar ou habilitar campos de texto
        GerenciarCampos.opcaoNovoEditar(txtNomeCompletoCliente, txtCpfCliente, 
                    txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                    txtCnhCliente, txtDataPrimeiraCnhCliente);
        
        //desabilitar e habilitar botoes
        GerenciarBotoes.botaoNovoEditar(btnNovoCliente, btnSalvarCliente, btnEditarCliente, 
                btnCancelarCliente, btnPesquisarCliente, btnExcluirCliente, btnOkCliente);
        
        txtNomeCompletoCliente.requestFocus();
        
    }//GEN-LAST:event_btnEditarClienteActionPerformed

    private void btnExcluirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirClienteActionPerformed
        
        int index = tblClienteLista.getSelectedRow(); 
        
        if (index >= 0 && index < listaClientes.size()){
            listaClientes.remove(index);
        }
        
        //carregar os dados na tabela de clientes
        CarregarTabela.tabelaClienteLista(tblClienteLista, listaClientes);
        
        //limpar os campos
        GerenciarCampos.limparTodosCampos(txtNomeCompletoCliente, txtCpfCliente, 
                    txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                    txtCnhCliente, txtDataPrimeiraCnhCliente);
        
        //desabilitar e habilitar botoes
        GerenciarBotoes.iniciarTela(btnNovoCliente, btnSalvarCliente, btnEditarCliente, 
                btnCancelarCliente, btnPesquisarCliente, btnExcluirCliente, btnOkCliente);
        
    }//GEN-LAST:event_btnExcluirClienteActionPerformed

    private void btnPesquisarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarClienteActionPerformed
        
        if (listaClientes.isEmpty())   {
            
            JOptionPane.showMessageDialog(null, "Nenhum cliente cadastrado para pesquisa!", "Messagem", JOptionPane.PLAIN_MESSAGE);
            
        } else {
        
            //limpar os campos
            GerenciarCampos.limparTodosCampos(txtNomeCompletoCliente, txtCpfCliente, 
                      txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                        txtCnhCliente, txtDataPrimeiraCnhCliente);
        
            //desabilitar e habilitar botoes
            GerenciarBotoes.botaoPesquisar(btnNovoCliente, btnSalvarCliente, btnEditarCliente, 
                    btnCancelarCliente, btnPesquisarCliente, btnExcluirCliente, btnOkCliente);
        
            //desabilitar ou habilitar campos de texto
            GerenciarCampos.opcaoPesquisar(txtNomeCompletoCliente, txtCpfCliente, 
                        txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                       txtCnhCliente, txtDataPrimeiraCnhCliente);
        
            txtCpfCliente.requestFocus();
            
        }
    }//GEN-LAST:event_btnPesquisarClienteActionPerformed

    private void btnOkClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkClienteActionPerformed
        
        if (txtCpfCliente.getText().equals(""))   {
            JOptionPane.showMessageDialog(null, "Nenhum CPF informado para pesquisa!", "Messagem", JOptionPane.PLAIN_MESSAGE);
        } else {
            Cliente cliente;
            
            String cpfPesquisa = txtCpfCliente.getText();
            
            String nomeCompletoCliente = "";
            String cpfCliente = "";
            String dataNascimentoCliente = "";
            String emailCliente = "";
            String telefoneCliente = "";
            String cnhCliente = "";
            String dataPrimeiroCnhCliente = "";
            
            for (int i = 0; i < listaClientes.size(); i++)  {
                
                cliente = listaClientes.get(i);
                
                if (cpfPesquisa.equals(cliente.getCpf()))   {
                    
                    nomeCompletoCliente = String.valueOf(cliente.getNomeCompleto());
                    cpfCliente = String.valueOf(cliente.getCpf());
                    dataNascimentoCliente = String.valueOf(cliente.getDataNascimento());
                    emailCliente = String.valueOf(cliente.getEmail());
                    telefoneCliente = String.valueOf(cliente.getTelefone());
                    cnhCliente = String.valueOf(cliente.getCnh());
                    dataPrimeiroCnhCliente = String.valueOf(cliente.getDataPrimeiroCnh());
                    
                }
            }
            
            if (cpfCliente.equals(""))  {
                
                JOptionPane.showMessageDialog(null, "Não existe cliente cadastrado para este CPF!", "Messagem", JOptionPane.PLAIN_MESSAGE);
            
                //limpar os campos
                GerenciarCampos.limparTodosCampos(txtNomeCompletoCliente, txtCpfCliente, 
                      txtDataDeNascimentoCliente, txtEmailCliente, txtTelefoneCliente, 
                        txtCnhCliente, txtDataPrimeiraCnhCliente);
                
            } else  {
            
                txtNomeCompletoCliente.setText(nomeCompletoCliente);
                txtCpfCliente.setText(cpfCliente);
                txtDataDeNascimentoCliente.setText(dataNascimentoCliente);
                txtEmailCliente.setText(emailCliente);
                txtTelefoneCliente.setText(telefoneCliente);
                txtCnhCliente.setText(cnhCliente);
                txtDataPrimeiraCnhCliente.setText(dataPrimeiroCnhCliente);

            }
            
            txtCpfCliente.selectAll();
            txtCpfCliente.requestFocus();
            
        }
    }//GEN-LAST:event_btnOkClienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarCliente;
    private javax.swing.JButton btnEditarCliente;
    private javax.swing.JButton btnExcluirCliente;
    private javax.swing.JButton btnNovoCliente;
    private javax.swing.JButton btnOkCliente;
    private javax.swing.JButton btnPesquisarCliente;
    private javax.swing.JButton btnSalvarCliente;
    private javax.swing.JButton btnVoltarFromCliente2Menu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCnhCliente;
    private javax.swing.JLabel lblCpfCliente;
    private javax.swing.JLabel lblDataNascimentoCliente;
    private javax.swing.JLabel lblDataPrimeiraCnhCliente;
    private javax.swing.JLabel lblEmailCliente;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JLabel lblTelefoneCliente;
    private javax.swing.JPanel pnlDadosCliente;
    private javax.swing.JTable tblClienteLista;
    private javax.swing.JTextField txtCnhCliente;
    private javax.swing.JTextField txtCpfCliente;
    private javax.swing.JFormattedTextField txtDataDeNascimentoCliente;
    private javax.swing.JFormattedTextField txtDataPrimeiraCnhCliente;
    private javax.swing.JTextField txtEmailCliente;
    private javax.swing.JTextField txtNomeCompletoCliente;
    private javax.swing.JFormattedTextField txtTelefoneCliente;
    // End of variables declaration//GEN-END:variables
}
